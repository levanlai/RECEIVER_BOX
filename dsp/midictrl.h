#ifndef __MIDICTRL_H__
#define __MIDICTRL_H__

WORD dspDesigner_HandleMidiEvent( DWORD Ev );	/* Ev: 32bit MIDI event in USB MIDI format */
WORD dspDesigner_HandleNRPN( WORD ch, WORD nrpn, DWORD v, WORD format );
/*
 * Process parameter control
 * input:
 *	ch: DSP# - 1
 *	nrpn: NRPN number (see NRPN list generated by Dream DSP Designer)
 *	v: value
 *	format : data format, can be 0=FORMAT_14BIT_PRECISION or 1=FORMAT_28BIT_PRECISION
 *		FORMAT_14BIT_PRECISION: give value in range 0..0x7FFF (will be used 13bit left shifted to convert to 28BIT)
 *		FORMAT_28BIT_PRECISION: give value in range 0..0x7FFFFFFF
 * return 0 if NRPN not handled, else NRPN is handled
 */ 
#define FORMAT_14BIT_PRECISION 0
#define FORMAT_28BIT_PRECISION 1

#define SYSEX_SIZE			20
#define SYSEX_CMD			4	// index of SysEx Command
#define SYSEX_NRPN_BASE		5	// index of SysEx NRPN data
#define SYSEX_NRPN_CHANNEL	0	// relative index of SysEx NRPN midi channel
#define SYSEX_NRPN_HI		1	// relative index of SysEx NRPN Hi
#define SYSEX_NRPN_LO		2	// relative index of SysEx NRPN Lo
#define SYSEX_NRPN_COUNT	3	// relative index of SysEx NRPN data count
#define SYSEX_NRPN_DATA		4	// relative index of SysEx NRPN data

typedef struct
{
	WORD pnt;
	WORD Buffer[SYSEX_SIZE];
} SysEx;

void sendSysExMessage( WORD id, unsigned char msg );
DWORD swapDword(DWORD data);
#define readExtMemDword(a) swapDword(_rdxtmem32Ex(a))

#endif //__MIDICTRL_H__